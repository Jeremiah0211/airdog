<mx:TitleWindow
	xmlns:mx="http://www.adobe.com/2006/mxml"
	title="{Components.instance.session.hundprofil.tittel + ' ' +  Components.instance.session.hundprofil.navn}"
	height="100%" width="100%"  
	creationComplete="init()"
	layout="vertical">
	
	<mx:Script>
		<![CDATA[
			import mx.validators.StringValidator;
			import mx.binding.utils.ChangeWatcher;
			import no.airdog.model.Hund;
			import no.airdog.services.Components;      
			import no.airdog.controller.*;
			import mx.controls.dataGridClasses.DataGridColumn;
			import mx.rpc.events.FaultEvent;
			import mx.formatters.DateFormatter;
			import mx.resources.ResourceBundle;	   	
			import mx.collections.*;
			import mx.controls.*;
			import mx.events.*;
			import mx.utils.StringUtil;
			import mx.validators.Validator;
			
			[Bindable]public var erGodkjent:Boolean;
            [Bindable]public var erTilbakestillt:Boolean = true;
            private var hvilkeKontroll:DisplayObject;
            
            private var hundIdValidator:StringValidator = new StringValidator();
			  	
			public function sendSkjema():void
			{
				var verdier:Hund = formVerdier();			
				Components.instance.controller.redigerHund(verdier);				
			}
			
			public function lukkRedigerHundVindu():void
			{
				Components.instance.controller.lukkRedigerHundVindu();
			}
			
			private function formVerdier():Hund
			{
				var hund:Hund = new Hund();
				
				hund.hundId = hundId.text;
				hund.tittel = tittel.text;
				hund.navn = navn.text;
				hund.morId = morId.text;
				hund.morNavn = morNavn.text;
				hund.farId = farId.text;
				hund.farNavn = farNavn.text;
				hund.idNr = idNr.text;
				
				if(radioHann.selected)
				{
					hund.kjonn = radioHann.value.toString();
				}
				else if(radioTispe.selected)
				{
					hund.kjonn = radioTispe.value.toString();
				}
				else
				{
					hund.kjonn = "";
				}
				
				hund.eierId = eierId.text;
				hund.raseId = raseId.text;
				hund.kullId = kullId.text;
				hund.farge = farge.text;
				hund.fargevariant = fargevariant.text;
				hund.oyesykdom = oyesykdom.text;
				hund.hoftesykdom = hoftesykdom.text;
				hund.haarlag = haarlag.text;
				hund.idMerke = idMerke.text;
				hund.storrelse = storrelse.text;
				hund.endretAv = endretAv.text;
				hund.endretDato = endretDato.text;
				hund.regDato = regDato.text;
				hund.manueltEndretAv = manueltEndretAv.text;
				hund.manueltEndretDato = manueltEndretDato.text;
				
				return hund;
			}
			
			private function tilbakestillForm():void
			{	
				hundId.text = Components.instance.session.hundprofil.hundId;
				tittel.text = Components.instance.session.hundprofil.tittel;
				navn.text = Components.instance.session.hundprofil.navn;
				morId.text = Components.instance.session.hundprofil.morId;
				morNavn.text = Components.instance.session.hundprofil.morNavn;
				farId.text = Components.instance.session.hundprofil.farId;
				farNavn.text = Components.instance.session.hundprofil.farNavn;
				idNr.text = Components.instance.session.hundprofil.idNr;
				
				if(Components.instance.session.hundprofil.kjonn == "H")
				{
					radioHann.selected = true;
					radioTispe.selected = false;
				}
				else if(Components.instance.session.hundprofil.kjonn == "T")
				{
					radioHann.selected = false;
					radioTispe.selected = true;	
				}
				else
				{
					radioHann.selected = false;
					radioTispe.selected = false;	
				}
				
				eierId.text = Components.instance.session.hundprofil.eierId;
				raseId.text = Components.instance.session.hundprofil.raseId;
				kullId.text = Components.instance.session.hundprofil.kullId;
				farge.text = Components.instance.session.hundprofil.farge;
				fargevariant.text = Components.instance.session.hundprofil.fargevariant;
				oyesykdom.text = Components.instance.session.hundprofil.oyesykdom;
				hoftesykdom.text = Components.instance.session.hundprofil.hoftesykdom;
				haarlag.text = Components.instance.session.hundprofil.haarlag;
				idMerke.text = Components.instance.session.hundprofil.idMerke;
				storrelse.text = Components.instance.session.hundprofil.storrelse;
				endretAv.text = Components.instance.session.hundprofil.endretAv;
				endretDato.text = Components.instance.session.hundprofil.endretDato;
				regDato.text = Components.instance.session.hundprofil.regDato;
				manueltEndretAv.text = Components.instance.session.hundprofil.manueltEndretAv;
				manueltEndretDato.text = Components.instance.session.hundprofil.manueltEndretDato;
				
				erTilbakestillt = true;
				erGodkjent = false;
			}
			
			private function valider(validerer:Validator):Boolean
            {                
	            var validatoren:DisplayObject = validerer.source as DisplayObject;
	            var ikkeVisBoks:Boolean = (validatoren != hvilkeKontroll);
	            var event:ValidationResultEvent = validerer.validate(null, ikkeVisBoks); 
	            var erValidert:Boolean = (event.type == ValidationResultEvent.VALID);
	            
	            erGodkjent = erGodkjent && erValidert;
	             
	            return erValidert;
             } 
             
          	private function settValidatorer():void
            {	
             	hundIdValidator.source = hundId;
             	hundIdValidator.minLength = 2;
             	hundIdValidator.property = "text";
			 }
			
			private function sammenliknObjekt(objekt1:Object,objekt2:Object):Boolean
			{
			    var buffer1:ByteArray = new ByteArray();
			    buffer1.writeObject(objekt1);
			    var buffer2:ByteArray = new ByteArray();
			    buffer2.writeObject(objekt2);
			 	
			    var storrelse:uint = buffer1.length;
			    if (buffer1.length == buffer2.length)
			    {
			        buffer1.position = 0;
			        buffer2.position = 0;
			 
			        while (buffer1.position < storrelse)
			        {
			            var v1:int = buffer1.readByte();
			            if (v1 != buffer2.readByte())
			            {
			                return false;
			            }
			        }    
			        return true;                        
			    }
			    return false;
			}
			
			private function validering(event:Event):void 
            {                    
                hvilkeKontroll = event.target as DisplayObject;
                var likTest:Boolean = sammenliknObjekt(formVerdier(), Components.instance.session.hundprofil);
                
                if((Components.instance.session.hundprofil != null) && !likTest)
             	{
            		var df:DateFormatter = new DateFormatter();
					df.formatString = "YYYY-MM-DD";
					
					manueltEndretAv.text = Components.instance.session.bruker.epost
             		manueltEndretDato.text = df.format(new Date());
             		
             		erTilbakestillt = false;
             	}
             	
             	if(likTest)
             	{
             		erTilbakestillt = true;
             		erGodkjent = false;
             	}
             	
             	erGodkjent = true;

                valider(hundIdValidator);                
            }
			
		 	private function settFokus():void
            {
                focusManager.setFocus(hundId);
            }
			
			private function init():void
            {
            	settFokus();
             	settValidatorer();
             	tilbakestillForm();
         	}
			
			private function settValidatorError():void
			{
				hundIdValidator.requiredFieldError = "Hund-ID er pÃ¥krevd";
			}
			
			private function sjekkIdMor():void
			{
				Components.instance.controller.hentHund(morId.text.toString(), sjekkMorIdResultat);
			}
            
            private function sjekkMorIdResultat(event:Hund):void
            {
            	if(StringUtil.trim(event.navn) == "")
            	{
            		morNavn.text = "Ukjent";
            	}
            	else
            	{
            		morNavn.text = StringUtil.trim(event.navn);
            	}
            	morNavn.toolTip = morNavn.text;
            }
            
            private function sjekkIdFar():void
			{
				Components.instance.controller.hentHund(farId.text.toString(), sjekkFarIdResultat);
			}
            
            private function sjekkFarIdResultat(event:Hund):void
            {
            	if(StringUtil.trim(event.navn) == "")
            	{
            		farNavn.text = "Ukjent";
            	}
            	else
            	{
            		farNavn.text = StringUtil.trim(event.navn);
            	}
            	farNavn.toolTip = farNavn.text;
            }
		]]>
	</mx:Script>	
	
	<mx:HBox>
		<mx:Form id="primaerform">
			<mx:FormItem label="Hund-ID">
				<mx:TextInput id="hundId" change="validering(event)" width="175" maxWidth="175"/>
			</mx:FormItem>
			<mx:FormItem label="Tittel">
				<mx:TextInput id="tittel" change="validering(event)" width="175" maxWidth="175"/>
			</mx:FormItem>
			<mx:FormItem label="Navn">
				<mx:TextInput id="navn" change="validering(event)" width="175" maxWidth="175"/>
			</mx:FormItem>
			<mx:FormItem label="Mors ID">
				<mx:TextInput id="morId" change="validering(event)" focusOut="sjekkIdMor()" width="175" maxWidth="175"/>
			</mx:FormItem>
			<mx:FormItem label="Navn">
				<mx:TextInput id="morNavn" enabled="false" width="175" maxWidth="175"/>
			</mx:FormItem>
			<mx:FormItem label="Fars ID">			
				<mx:TextInput id="farId" change="validering(event)" focusOut="sjekkIdFar()" width="175" maxWidth="175"/>
			</mx:FormItem>
			<mx:FormItem label="Navn">
				<mx:TextInput id="farNavn" enabled="false" width="175" maxWidth="175"/>
			</mx:FormItem>
			<mx:FormItem label="Eier-ID">
				<mx:TextInput id="eierId" change="validering(event)" width="175" maxWidth="175"/>
			</mx:FormItem>
			<mx:FormItem label="Rase-ID">
				<mx:TextInput id="raseId" enabled="false" width="175" maxWidth="175"/>
			</mx:FormItem>
			<mx:FormItem label="Kull-ID">
				<mx:TextInput id="kullId" change="validering(event)" width="175" maxWidth="175"/>
			</mx:FormItem>
			<mx:FormItem label="ID-nummer">
				<mx:TextInput id="idNr" change="validering(event)" width="175" maxWidth="175"/>
			</mx:FormItem>
			<mx:FormItem label="ID-merke">
				<mx:TextInput id="idMerke" change="validering(event)" width="175" maxWidth="175"/>
			</mx:FormItem>
		</mx:Form>
		<mx:Form>
			<mx:FormItem label="KjÃ¸nn" direction="horizontal">
				<mx:RadioButton groupName="kjonnValg" id="radioHann" label="Hann" value="H" change="validering(event)"/>
				<mx:RadioButton groupName="kjonnValg" id="radioTispe" label="Tispe" value="T" change="validering(event)"/>		
			</mx:FormItem>
			<mx:FormItem label="Ãyesykdom">
				<mx:TextInput id="oyesykdom" change="validering(event)" width="175" maxWidth="175"/>
			</mx:FormItem>
			<mx:FormItem label="Hoftesykdom">
				<mx:TextInput id="hoftesykdom" change="validering(event)" width="175" maxWidth="175"/>
			</mx:FormItem>
			<mx:FormItem label="HÃ¥rlag">
				<mx:TextInput id="haarlag" change="validering(event)" width="175" maxWidth="175"/>
			</mx:FormItem>
			<mx:FormItem label="Farge">
				<mx:TextInput id="farge" change="validering(event)" width="175" maxWidth="175"/>
			</mx:FormItem>
			<mx:FormItem label="Fargevariant">
				<mx:TextInput id="fargevariant" change="validering(event)" width="175" maxWidth="175"/>
			</mx:FormItem>
			<mx:FormItem label="StÃ¸rrelse">
				<mx:TextInput id="storrelse" change="validering(event)" width="175" maxWidth="175"/>
			</mx:FormItem>
			<mx:FormItem label="Endret av">
				<mx:TextInput id="endretAv" enabled="false" width="175" maxWidth="175"/>
			</mx:FormItem>
			<mx:FormItem label="Dato endret">
				<mx:DateField id="endretDato" enabled="false" formatString="YYYY-MM-DD" width="175" maxWidth="175"/> 
			</mx:FormItem>
			<mx:FormItem label="Dato registrert">
				<mx:DateField id="regDato" enabled="false" formatString="YYYY-MM-DD" width="175" maxWidth="175"/>
			</mx:FormItem>
			<mx:FormItem label="Manuelt endret av">
				<mx:TextInput id="manueltEndretAv" enabled="false" width="175" maxWidth="175"/>
			</mx:FormItem>
			<mx:FormItem label="Dato manuelt endret">
				<mx:DateField id="manueltEndretDato" enabled="false" formatString="YYYY-MM-DD" width="175" maxWidth="175"/>				
			</mx:FormItem>	
		</mx:Form>
	</mx:HBox>
	<mx:ControlBar horizontalAlign="center">
		<mx:Button id="lagre" label="Lagre" enabled="{erGodkjent}" click="sendSkjema()"/>
		<mx:Button id="tilbakestill" label="Tilbakestill" enabled="{!erTilbakestillt}" click="tilbakestillForm()"/>
		<mx:Button id="avbryt" label="Avbryt" click="lukkRedigerHundVindu()"/>	
	</mx:ControlBar>
</mx:TitleWindow>